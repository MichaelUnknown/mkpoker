name: Ubuntu

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        compiler: [gcc,clang]
        build_type: [Release,Debug]
        include:
          - compiler: gcc
            cc: gcc-10
            cxx: g++-10
          - compiler: clang
            cc: clang-11
            cxx: clang++-11
            cxx_flags: -stdlib=libc++ -nostdinc++ -cxx-isystem $GITHUB_WORKSPACE/llvm/include/c++/v1/ -Wno-unused-command-line-argument
            link_flags: -L $GITHUB_WORKSPACE/llvm/lib -Wl,-rpath,$ENV{GITHUB_WORKSPACE}/llvm/lib -lc++abi

    steps:
    - uses: actions/checkout@v2
    
    - name: install clang 11
      if: matrix.cxx == 'clang++-11'
      shell: bash
      working-directory: ${{ env.HOME }}
      run: |
        wget https://apt.llvm.org/llvm.sh
        chmod +x llvm.sh
        sudo ./llvm.sh 11

    - name: test clang
      run: |
        pwd
        ${{ matrix.cxx }} --version
        ls /usr/bin/clang*

    - name: install libc++
      if: matrix.cxx == 'clang++-11'
      env:
        CC: ${{matrix.cc}}
        CXX: ${{matrix.cxx}}
      shell: bash
      working-directory: ${{ env.HOME }}
      run: |
        chmod +x $GITHUB_WORKSPACE/script/install.sh
        $GITHUB_WORKSPACE/script/install.sh

    - name: configure
      if: matrix.cxx != 'clang++-11'
      env:
        CC: ${{matrix.cc}}
        CXX: ${{matrix.cxx}}
      shell: bash
      run: cmake -B build_${{ matrix.build_type }} -D CMAKE_BUILD_TYPE=${{ matrix.build_type }}

    - name: configure11
      if: matrix.cxx == 'clang++-11'
      env:
        CC: ${{matrix.cc}}
        CXX: ${{matrix.cxx}}
      shell: bash
      run: |
        cmake -B build_${{ matrix.build_type }} \
        -D CMAKE_BUILD_TYPE=${{ matrix.build_type }} \
        -D "CMAKE_CXX_FLAGS:STRING=${{matrix.cxx_flags}}" \
        -D "CMAKE_EXE_LINKER_FLAGS:STRING=${{matrix.link_flags}}" \
        -D CMAKE_VERBOSE_MAKEFILE:BOOL=ON

    - name: build
      run: cmake --build build_${{ matrix.build_type }} -j4 -v

